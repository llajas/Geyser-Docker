steps:
  - name: check-latest-version
    image: alpine
    commands:
      - apk add --no-cache curl jq
      - |
        LATEST_VERSION=$(curl -s -L 'https://download.geysermc.org/v2/projects/geyser' -H 'Accept: application/json' | jq -r '.versions[-1]')
        CURRENT_VERSION=$(curl -s -L http://registry.lajas.tech/v2/geyser-mc/tags/list | jq -r '.tags[]' | grep -v 'latest' | grep -v '^[[:xdigit:]]\{8\}$' | sort -rV | head -n1 || echo "none")
        echo "Latest Geyser version: $LATEST_VERSION"
        echo "Current image version: $CURRENT_VERSION"
        if [ "$CI_PIPELINE_EVENT" = "push" ] || [ "$CURRENT_VERSION" = "none" ] || [ "$LATEST_VERSION" != "$CURRENT_VERSION" ]; then
          echo "Build needed: Push event or new version detected"
          echo "GEYSER_VERSION=$LATEST_VERSION" > .env
          echo $LATEST_VERSION > .tags
          echo ${CI_COMMIT_SHA:0:8} >> .tags
          #echo latest >> .tags
        else
          echo "No new version available and not a push event"
          exit 78 # Special exit code in Woodpecker to skip next steps
        fi
        echo "Environment variables stored in .env file:"
        cat .env
        echo "Tags to be used:"
        cat .tags
    when:
      event: [push, tag, cron]

  - name: docker-build
    image: woodpeckerci/plugin-docker-buildx
    settings:
      registry: https://registry.lajas.tech/v2/
      repo: registry.lajas.tech/geyser-mc
      dockerfile: Dockerfile
      tags_file:
        - .tags
      build_args_from_env:
        - GEYSER_VERSION
      env_file: .env
      cache-from: type=registry,ref=registry.lajas.tech/docker-build-cache
      cache-to: type=registry,ref=registry.lajas.tech/docker-build-cache
      username:
        from_secret: registry_username
      password:
        from_secret: registry_token
    when:
      event: [push, tag, cron]

when:
  event: [push, tag, cron]
